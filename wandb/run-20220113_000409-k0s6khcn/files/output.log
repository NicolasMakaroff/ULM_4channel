
Validation sanity check:  50%|██████████████████████████████████████████████████████████████████████████████████▌                                                                                  | 1/2 [00:00<00:00,  1.04it/s]
GPU available: False, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
   | Name       | Type            | Params
------------------------------------------------
0  | encoder1   | Sequential      | 2.5 K
1  | pool1      | MaxPool2d       | 0
2  | encoder2   | Sequential      | 14.0 K
3  | pool2      | MaxPool2d       | 0
4  | encoder3   | Sequential      | 55.6 K
5  | pool3      | MaxPool2d       | 0
6  | encoder4   | Sequential      | 221 K
7  | pool4      | MaxPool2d       | 0
8  | bottleneck | Sequential      | 885 K
9  | upconv4    | ConvTranspose2d | 131 K
10 | decoder4   | Sequential      | 442 K
11 | upconv3    | ConvTranspose2d | 32.8 K
12 | decoder3   | Sequential      | 110 K
13 | upconv2    | ConvTranspose2d | 8.2 K
14 | decoder2   | Sequential      | 27.8 K
15 | upconv1    | ConvTranspose2d | 2.1 K
16 | decoder1   | Sequential      | 7.0 K
17 | conv       | Conv2d          | 51
------------------------------------------------
1.9 M     Trainable params
0         Non-trainable params
1.9 M     Total params
7.769     Total estimated model params size (MB)
/Users/nicolasmakaroff/Documents/ULM_4channel/lib/python3.8/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:631: UserWarning: Checkpoint directory /Users/nicolasmakaroff/Documents/ULM_4channel/None/version_None/checkpoints exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
/Users/nicolasmakaroff/Documents/ULM_4channel/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:132: UserWarning: The dataloader, val_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 8 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
Validation sanity check: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:01<00:00,  1.21it/s]torch.Size([1, 256, 256])
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])
Epoch 0:   0%|                                                                                                                                                                                            | 0/15 [00:00<?, ?it/s]
/Users/nicolasmakaroff/Documents/ULM_4channel/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:132: UserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 8 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/Users/nicolasmakaroff/Documents/ULM_4channel/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:428: UserWarning: The number of training samples (10) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.








Epoch 0:  80%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                 | 12/15 [00:18<00:04,  1.54s/it, loss=0.115]

Validating:  80%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                   | 4/5 [00:03<00:00,  1.22it/s]
/Users/nicolasmakaroff/Documents/ULM_4channel/lib/python3.8/site-packages/pytorch_lightning/loggers/wandb.py:341: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.44it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])








Epoch 1:  80%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 12/15 [00:18<00:04,  1.56s/it, loss=0.099, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:04<00:00,  1.41it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])








Epoch 2:  80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                              | 12/15 [00:18<00:04,  1.55s/it, loss=0.0728, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.50it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 3:  67%|██████████████████████████████████████████████████████████████████████████████████████████████████████▋                                                   | 10/15 [00:17<00:08,  1.71s/it, loss=0.0559, v_num=khcn]


torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.49it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 4:  67%|██████████████████████████████████████████████████████████████████████████████████████████████████████▋                                                   | 10/15 [00:17<00:08,  1.72s/it, loss=0.0432, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.52it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])








Epoch 5:  80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                              | 12/15 [00:18<00:04,  1.50s/it, loss=0.0331, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.52it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 6:  67%|██████████████████████████████████████████████████████████████████████████████████████████████████████▋                                                   | 10/15 [00:16<00:08,  1.67s/it, loss=0.0256, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.53it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 7:  80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                              | 12/15 [00:17<00:04,  1.45s/it, loss=0.0198, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.57it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 8:  80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                              | 12/15 [00:17<00:04,  1.43s/it, loss=0.0156, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.58it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])







Epoch 9:  80%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏                              | 12/15 [00:16<00:04,  1.41s/it, loss=0.0125, v_num=khcn]

torch.Size([1, 256, 256])██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:03<00:00,  1.60it/s]
torch.Size([1, 256, 256])
torch.Size([1, 256, 256])
Epoch 9: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15/15 [00:20<00:00,  1.34s/it, loss=0.0125, v_num=khcn]